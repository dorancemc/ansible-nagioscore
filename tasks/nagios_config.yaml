---

- name: create temporary directory
  tempfile:
    state: directory
    suffix: nagios
  register: tempfolder
  changed_when: false
  tags:
    - nagios-config

- name: assets folder creation
  file:
    path: "{{ tempfolder.path }}/{{ item|basename }}"
    state: directory
    owner: "{{ nagios.user }}"
    group: "{{ nagios.group }}"
    mode: 0750
  with_items: "{{ __nagios_config_parameters.cfg_dir }}"
  changed_when: false
  tags:
    - nagios-config

- name: change tempfile ownership
  ansible.builtin.file:
    path: "{{ tempfolder.path }}"
    owner: "{{ nagios.user }}"
    group: "{{ nagios.group }}"
  changed_when: false
  tags:
    - nagios-config

- name: folders synchronization to temp folder
  synchronize:
    src: "{{ nagios.etc_path }}/{{ item|basename }}/"
    dest: "{{ tempfolder.path }}/{{ item|basename }}/"
    owner: yes
    group: yes
    perms: yes
  delegate_to: "{{ inventory_hostname }}"
  with_items:
    - "{{ __nagios_config_parameters.cfg_dir }}"
  changed_when: false
  when: not nagios_clean_assets
  tags:
    - nagios-config

- name: files synchronization to temp folder
  synchronize:
    src: "{{ nagios.etc_path }}/{{ item }}"
    dest: "{{ tempfolder.path }}/{{ item }}"
    owner: yes
    group: yes
    perms: yes
  delegate_to: "{{ inventory_hostname }}"
  with_items:
    - nagios.cfg
    - resource.cfg
  changed_when: false
  when: not nagios_clean_assets
  tags:
    - nagios-config

- name: update resource config
  template:
    src: nagios/etc/{{ item }}
    dest: "{{ tempfolder.path }}/{{ item }}"
    mode: 0664
  with_items:
    - resource.cfg
  register: resourcecfg
  tags:
    - nagios-config

- name: update nagios config
  template:
    src: nagios/etc/{{ item }}
    dest: "{{ tempfolder.path }}/{{ item }}"
    mode: 0664
  with_items:
    - nagios.cfg
  register: nagioscfg
  tags:
    - nagios-config

- name: modify temp path for nagios.cfg file
  replace:
    path: "{{ tempfolder.path }}/nagios.cfg"
    regexp: '{{ nagios.etc_path }}'
    replace: '{{ tempfolder.path }}'
  changed_when: false
  tags:
    - nagios-config

#templates
- name: create nagios templates config
  template:
    src: "nagios/etc/templates/{{ item }}"
    dest: "{{ tempfolder.path }}/templates/{{ item }}"
    mode: 0664
  with_items:
    - commands.cfg
    - contact_templates.cfg
    - host_templates.cfg
    - service_templates.cfg
    - time_templates.cfg
  tags:
    - nagios-config

- name: create assets config
  template:
    src: "nagios/etc/assets/{{ item }}"
    dest: "{{ tempfolder.path }}/assets/{{ item }}"
    mode: 0664
  with_items:
    - contacts.cfg
    - groups_definition.cfg
  tags:
    - nagios-config

- name: list clients config
  set_fact:
    _nagios_hosts_files: "{{ _nagios_hosts_files|default([]) + [item.src] }}"
  with_community.general.filetree: "{{ nagios_hosts_path }}/"
  when: nagios_hosts_path is defined and item.state=='file'
  no_log: true
  tags:
    - nagios-config

- name: create assets config
  include_tasks: "host_definition.yaml"
  with_items: "{{ _nagios_hosts_files }}"
  when: _nagios_hosts_files is defined
  loop_control:
    loop_var: _nagios_host_file
    label: "{{ _nagios_host_file|basename }}"
  tags:
    - nagios-config

#validations
- name: run command checking nagios config
  shell: "{{ nagios.command }} -v {{ tempfolder.path }}/nagios.cfg"
  register: nagios_conf_validation
  ignore_errors: true
  changed_when: false
  tags:
    - nagios-config

- debug:
    msg: "{{ nagios_conf_validation.stdout_lines }}"
  tags:
    - nagios-config

- name: update users to htpasswd file
  include_tasks: "nagios_httpasswd.yaml"
  with_items: "{{ nagios_contacts }}"
  loop_control:
    loop_var: _contact
  no_log: true
  when: nagios_conf_validation is defined and nagios_conf_validation.rc == 0
  tags:
    - nagios-config

- name: update resource config
  template:
    src: nagios/etc/{{ item }}
    dest: "{{ nagios.etc_path }}/{{ item }}"
    mode: 0664
  with_items:
    - resource.cfg
  when: resourcecfg.changed and nagios_conf_validation.rc == 0
  notify: reload nagios
  tags:
    - nagios-config

- name: update nagios config
  template:
    src: nagios/etc/{{ item }}
    dest: "{{ nagios.etc_path }}/{{ item }}"
    mode: 0664
  with_items:
    - nagios.cfg
  when: nagioscfg.changed and nagios_conf_validation.rc == 0
  notify: reload nagios
  tags:
    - nagios-config

- name: folders synchronization to temp folder
  synchronize:
    src: "{{ tempfolder.path }}/{{ item|basename }}/"
    dest: "{{ nagios.etc_path }}/{{ item|basename }}/"
    owner: yes
    group: yes
    perms: yes
    delete: yes
    recursive: yes
  delegate_to: "{{ inventory_hostname }}"
  with_items:
    - "{{ __nagios_config_parameters.cfg_dir }}"
  when: nagios_conf_validation.rc == 0
  notify: reload nagios
  tags:
    - nagios-config

- name: remove temp folder
  file:
    path: "{{ tempfolder.path }}"
    state: absent
  when: tempfolder.path is defined and nagios_conf_validation.rc == 0
  changed_when: false
  tags:
    - nagios-config
